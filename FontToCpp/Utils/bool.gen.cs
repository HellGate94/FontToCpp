//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool
// Runtime Version: 1.0.0.0
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable

using System;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace HellEngine.Mathematics;

public static unsafe partial class math {
    #region Component Math

    /// <summary>Returns the bit pattern of a bool value as a sbyte value</summary>
    /// <param name="value">The bool bits to copy</param>
    /// <returns>The sbyte with the same bit pattern as the input</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static sbyte assbyte(bool value) {
        return *(sbyte*)&value;
    }
    /// <summary>Returns the bit pattern of a bool value as a byte value</summary>
    /// <param name="value">The bool bits to copy</param>
    /// <returns>The byte with the same bit pattern as the input</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static byte asbyte(bool value) {
        return *(byte*)&value;
    }
    /// <summary>Creates a bitmask representation of a bool value encoding each value as one bit</summary>
    /// <remarks>Stored in least significant bit (LSB) order (lowest to highest)</remarks>
    /// <param name="x">Input for the bitmask</param>
    /// <returns>Bitmask representation of a bool value</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static int bitmask(in bool x) {
        int mask = 0;
        if (x) mask |= 1;
        return mask;
    }
    /// <summary>Returns true if any component of the input bool vector is true, false otherwise</summary>
    /// <param name="x">Vector of values to compare</param>
    /// <returns>True if any the components of x are true, false otherwise</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static bool any(in bool x) {
        return x;
    }
    /// <summary>Returns true if all components of the input bool vector is true, false otherwise</summary>
    /// <param name="x">Vector of values to compare</param>
    /// <returns>True if all the components of x are true, false otherwise</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static bool all(in bool x) {
        return x;
    }
    /// <summary>Returns b if c is true, a otherwise</summary>
    /// <param name="a">Value to use if c is false</param>
    /// <param name="b">Value to use if c is false</param>
    /// <param name="c">Bool value to choose between a and b</param>
    /// <returns>The selection between a and b according to bool c</returns>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    public static bool select(in bool a, in bool b, in bool c) {
        return c ? b : a;
    }
    #endregion Component Math

}
